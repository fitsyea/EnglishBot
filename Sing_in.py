import telebot
import DB_controller
import configparser
# import GUI


#@TFS_task_bot

config = configparser.ConfigParser()  # —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç–∞ –ø–∞—Ä—Å–µ—Ä–∞
config.read("config.ini")

bot = telebot.TeleBot()
db_object = DB_controller.DB()

name = ''
sname = ''
mail = ''
phone = ''
tech_log = ''
tech_pas = ''
login_tech_flag = 0

keyboard = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
button_contacts = telebot.types.KeyboardButton(text="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", request_contact=True)
send_file = telebot.types.KeyboardButton(text="–ö–∏–Ω—É—Ç—å –î–ó-—à–∫—É", request_contact=False)
response = telebot.types.KeyboardButton(text="–û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤", request_contact=False)
achievement = telebot.types.KeyboardButton(text="–ê—á–∏–≤–∫–∏", request_contact=False)
help = telebot.types.KeyboardButton(text="–ü–æ–º–æ—â—å", request_contact=False)

homework = telebot.types.KeyboardButton(text ="–î–æ–º–∞—à–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤",request_contact=False)
markup = telebot.types.KeyboardButton(text="–û—Ü–µ–Ω–∏—Ç—å –¥–∑",request_contact=False)

@bot.message_handler(commands=['start'])
def logging(mes):
    keyboard = telebot.types.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True
    ).add(button_contacts)
    bot.send_message(mes.chat.id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ üî•IT-–ê–∫–∞–¥–µ–º–∏—éüî•', reply_markup=keyboard)







@bot.message_handler(content_types=['contact'])
def get_data_from_phone(mes):
    bot.send_message(mes.chat.id, '–¢—ã –∑–µ—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–∞ –∫—É—Ä—Å –ø–æ Python. –î–æ—Ä–æ–≥–∏ –Ω–∞–∑–∞–¥ –Ω–µ—Ç...')
    bot.send_message(mes.chat.id, '–¢–µ–ø–µ—Ä—å –Ω–µ–º–Ω–æ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–±–µ')
    bot.send_message(mes.chat.id, '–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?')
    bot.register_next_step_handler(mes, name)
    global phone
    phone = str(mes.contact.phone_number)






def name(mes):
    bot.send_message(mes.chat.id, '–ù–∞–ø–∏—à–∏ —Å–≤–æ—é —Ñ–∞–º–∏–ª–∏—é')
    global name
    name = str(mes.text)
    bot.register_next_step_handler(mes, sname)

def sname(mes):
    bot.send_message(mes.chat.id, '–ò –ø–æ—Å–ª–µ–¥–Ω–µ–µ, –Ω–∞–ø–∏—à–∏ —Å–≤–æ—é –ø–æ—á—Ç—É')
    global sname
    sname = str(mes.text)

    bot.register_next_step_handler(mes, mail)

def mail(mes):
    keyboard = telebot.types.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True).add(send_file, achievement, response)
    global mail
    mail = str(mes.text)
    db_object.add_to_base(str(mes.from_user.id), name, sname, phone, mail)
    bot.send_message(mes.chat.id, '–°–ø–∞—Å–∏–±–æ\n–¢–µ–ø–µ—Ä—å –º—ã –∑–Ω–∞–µ–º –≤—Å—ë –ø—Ä–æ —Ç–µ–±—èüòà\n–î–æ –≤—Å—Ç—Ä–µ—á–∏...', reply_markup=to_main())

def tech_login(mes):
    global tech_log
    tech_log = str(mes.text)
    bot.send_message(mes.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ–π –ø–∞—Ä–æ–ª—å')
    bot.register_next_step_handler(mes, tech_pass)

def tech_pass(mes):
    global tech_pas
    global tech_log
    tech_pas = str(mes.text)
    if db_object.get_admin_data(tech_log,tech_pas):
        print("def")
        print(mes.chat.id)
        db_object.set_admin(mes.chat.id)
        bot.send_message(mes.chat.id, '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω', reply_markup=to_tech())
        tech_log = 0
        tech_pas = 0
    else:
        bot.send_message(mes.chat.id, '–í—Ö–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω', reply_markup=to_main())




def to_main():
    keyboard = telebot.types.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True).add(send_file, achievement, response,help)
    return keyboard

def to_tech():
    keyboard = telebot.types.ReplyKeyboardMarkup(
        resize_keyboard=True, one_time_keyboard=True).add(homework,markup)
    return keyboard

def to_ans():
    keyboard = telebot.types.InlineKeyboardMarkup()
    button = telebot.types.InlineKeyboardButton(text='–û–ø–æ–≤–µ—Å—Ç–∏—Ç—å –æ –ø–æ–ª—É—á–µ–Ω–∏–∏', callback_data='add')
    keyboard.add(button)
    return keyboard

def check_is_tech(tel_id):
    return db_object.get_admin(tel_id)

def send_homework_to_tech(file_name, file_id, chat_id):
    teacher_id = db_object.find_teacher_for_work(file_name[0])[0]
    if file_name[0] is not None:
        bot.send_document(teacher_id,file_id)

        send_mas_from_teach(teacher_id[0], file_name[0], chat_id, file_name[2])


def send_mas_from_teach(chat_id, file_name, stud_chat_id, number):
    student_name = db_object.get_student(stud_chat_id)
    bot.send_message(chat_id, "–°—Ç—É–¥–µ–Ω—Ç –≥—Ä—É–ø–ø—ã " + str(file_name) + " " + student_name + " –ø—Ä–∏—Å–ª–∞–ª –¥–æ–º–∞—à–µ–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–æ–º–µ—Ä : "+number, reply_markup=to_ans())


    @bot.callback_query_handler(func=lambda call: True)
    def query_handler(call):
        if call.data == 'add':
            bot.answer_callback_query(callback_query_id=call.id, text='–°—Ç—É–¥–µ–Ω—Ç—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏–µ')
            bot.send_message(stud_chat_id, text="–î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ" )




@bot.message_handler(content_types=['document'])
def save_fl_to_db(mes):
    chat_id = mes.chat.id
    extension = mes.document.file_name[-3:]  # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞
    if extension in 'zip':
        bot.send_message(mes.chat.id, '–°—É–ø–µ—Ä, –∑–∞—Å–µ–π–≤–∏–ª —Ç–≤–æ—ë –î–ó, —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–ø–æ–¥ –Ω–µ –æ—Ç–≤–µ—Ä—Ç–∏—Ç—Å—èüòâ', reply_markup=to_main())
        db_object.save_file_to_db(mes.document.file_name, mes.document.file_id)
        send_homework_to_tech(mes.document.file_name, mes.document.file_id, chat_id)
    else:
        bot.send_message(mes.chat.id, '–ù–µ, —Ä–æ–¥–Ω–æ–π, –Ω–µ –∫–∞—Ç–∏—Ç, —è —Å–æ—Ö—Ä–∞–Ω—è—é —Ç–æ–ª—å–∫–æ .zip ü§∑‚Äç‚ôÇÔ∏è', reply_markup=to_main())

@bot.message_handler(content_types=['text'])
def mes_text(mes):
    print(mes.chat.id)

    if str(mes.text) in '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
        bot.send_message(mes.chat.id, '–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=to_main())

    if str(mes.text) in '–ü–æ–º–æ—â—å':
        bot.send_sticker(mes.chat.id,'CAACAgIAAxkBAAK8O2AMmJ3wfnzEpfZLb0-sLE0VVNR4AAIJAgACmS9LCnrjYeoV8vAfHgQ', reply_markup=to_main())

    if str(mes.text) in '–ê—á–∏–≤–∫–∏':
        achive_list = db_object.get_all_achivment(mes.chat.id)
        bot.send_message(mes.chat.id, '–ü–æ–∫–∞ —á—Ç–æ —É —Ç–µ–±—è –µ—Å—Ç—å —Ç–∞–∫–∏–µ —Å—Ç–∏–∫–µ—Ä—ã –∑–∞ –¥–æ–º–∞—à–∫—É : ')
        for achive in achive_list :
            bot.send_sticker(mes.chat.id, achive[0])
        bot.send_message(mes.chat.id, '–ó–∞ –∫–∞–∫—É—é –¥–æ–º–∞—à–∫—É –∫–∞–∫–æ–π —Å—Ç–∏–∫–µ—Ä —É—Ç–æ—á–Ω—è–π —É –ø—Ä–µ–ø–æ–¥–∞, —Ç–∞–∫–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ —Ç–∑ –Ω–µ –±—ã–ª–æü§∑‚Äç‚ôÇÔ∏è',reply_markup=to_main())

    if str(mes.text) in '–ö–∏–Ω—É—Ç—å –î–ó-—à–∫—É':
        bot.send_message(mes.chat.id, '–î–æ–±—Ä–æ, –∑–∞–∫–∏–Ω—å –º–Ω–µ –∞—Ä—Ö–∏–≤ —Ñ–æ—Ä–º–∞—Ç–∞ zip. –ò–º—è —Ñ–∞–π–ª–∞ - ‚Äú–Ω–æ–º–µ—Ä –≥—Ä—É–ø–ø—ã-–Ω–æ–º–µ—Ä —É—Ä–æ–∫–∞-–Ω–æ–º–µ—Ä –≤–µ—Ä—Å–∏–∏ –¥–∑. zip‚Äù –ø—Ä–∏–º–µ—Ä ‚Äú3-2-4. zip‚Äù .\n–Ø —Å–æ—Ö—Ä–∞–Ω—é —Ç–≤–æ—é –ø—Ä–µ–ª–µ—Å—å –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞üëå ')

    if str(mes.text) in '–Ø –ø—Ä–µ–ø–æ–¥':
        if check_is_tech(mes.chat.id):
            bot.send_message(mes.chat.id, '–í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω', reply_markup=to_tech())
        else:
            bot.send_message(mes.chat.id, '–í–≤–µ–¥–∏ —Å–≤–æ–π –ª–æ–≥–∏–Ω')
            bot.register_next_step_handler(mes, tech_login)

    if (str(mes.text) in '–î–æ–º–∞—à–∫–∞ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤'):
        if check_is_tech(mes.chat.id):
            bot.send_message(mes.chat.id, '–î–µ—Ä–∂–∏',reply_markup=to_tech())
        else:
            bot.send_message(mes.chat.id, '–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –î–ó –Ω—É–∂–Ω–æ –∑–∞–ª–æ–≥–∏–Ω–∏—Ç—å—Å—è –∫–∞–∫ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å',reply_markup=to_main())

bot.polling()
